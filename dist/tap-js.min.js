!function (t) {
  var e = {}, n = {};
  n.attachEvent = function (e, n, o) {
    return "addEventListener"in t ? e.addEventListener(n, o, !1) : void 0
  }, n.fireFakeEvent = function (t, e) {
    return document.createEvent ? t.target.dispatchEvent(n.createEvent(e)) : void 0
  }, n.createEvent = function (e) {
    if (document.createEvent) {
      var n = t.document.createEvent("HTMLEvents");
      return n.initEvent(e, !0, !0), n.eventName = e, n
    }
  }, n.getRealEvent = function (t) {
    return t.originalEvent && t.originalEvent.touches && t.originalEvent.touches.length ? t.originalEvent.touches[0] : t.touches && t.touches.length ? t.touches[0] : t
  };
  var o = [{
    test: ("propertyIsEnumerable"in t || "hasOwnProperty"in document) && (t.propertyIsEnumerable("ontouchstart") || document.hasOwnProperty("ontouchstart")),
    events: {start: "touchstart", move: "touchmove", end: "touchend"}
  }, {
    test: t.navigator.msPointerEnabled,
    events: {start: "MSPointerDown", move: "MSPointerMove", end: "MSPointerUp"}
  }, {test: t.navigator.pointerEnabled, events: {start: "pointerdown", move: "pointermove", end: "pointerup"}}];
  e.options = {eventName: "tap", fingerMaxOffset: 11};
  var a, r, i, v, s = {};
  a = function (t) {
    return n.attachEvent(document.documentElement, v[t], i[t])
  }, i = {
    start: function (t) {
      t = n.getRealEvent(t), s.start = [t.pageX, t.pageY], s.offset = [0, 0]
    }, move: function (t) {
      return s.start || s.move ? (t = n.getRealEvent(t), s.move = [t.pageX, t.pageY], void(s.offset = [Math.abs(s.move[0] - s.start[0]), Math.abs(s.move[1] - s.start[1])])) : !1
    }, end: function (o) {
      if (o = n.getRealEvent(o), s.offset[0] < e.options.fingerMaxOffset && s.offset[1] < e.options.fingerMaxOffset && !n.fireFakeEvent(o, e.options.eventName)) {
        if (t.navigator.msPointerEnabled || t.navigator.pointerEnabled) {
          var a = function (t) {
            t.preventDefault(), o.target.removeEventListener("click", a)
          };
          o.target.addEventListener("click", a, !1)
        }
        o.preventDefault()
      }
      s = {}
    }, click: function (t) {
      return n.fireFakeEvent(t, e.options.eventName) ? void 0 : t.preventDefault()
    }
  }, r = function () {
    for (var t = 0; t < o.length; t++)if (o[t].test)return v = o[t].events, a("start"), a("move"), a("end"), !1;
    return n.attachEvent(document.documentElement, "click", i.click)
  }, t.tapjsInited || (n.attachEvent(t, "load", r), t.tapjsInited = !0)
}(window);